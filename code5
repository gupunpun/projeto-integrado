# Sistema de Fila de Atendimentos para Clínica Vida+
# Implementa uma fila FIFO (First In, First Out) usando uma lista Python
# Cada paciente é um dicionário: {'nome': str, 'cpf': str}

fila_atendimentos = []  # Lista para representar a fila

def mostrar_menu():
    """Exibe o menu de opções."""
    print("=" * 40)
    print("SISTEMA DE FILA DE ATENDIMENTOS - CLÍNICA VIDA+")
    print("=" * 40)
    print("1. Inserir paciente na fila")
    print("2. Atender primeiro paciente (remover da fila)")
    print("3. Mostrar pacientes na fila")
    print("4. Executar algoritmo completo (inserir 3, atender 1, mostrar restante)")
    print("5. Sair")
    print("=" * 40)

def inserir_paciente():
    """Insere um paciente na fila com validações."""
    print("\n--- INSERIR PACIENTE NA FILA ---")
    nome = input("Nome do paciente: ").strip().title()
    if not nome:
        print("Erro: O nome não pode estar vazio.")
        return
    
    while True:
        cpf = input("CPF (11 dígitos numéricos): ").strip()
        if len(cpf) == 11 and cpf.isdigit():
            break
        else:
            print("Erro: CPF deve ter exatamente 11 dígitos numéricos.")
    
    fila_atendimentos.append({'nome': nome, 'cpf': cpf})
    print(f"Paciente '{nome}' inserido na fila com sucesso!")

def atender_primeiro():
    """Remove o primeiro paciente da fila para atendimento."""
    print("\n--- ATENDER PRIMEIRO PACIENTE ---")
    if not fila_atendimentos:
        print("A fila está vazia. Nenhum paciente para atender.")
        return
    
    paciente_atendido = fila_atendimentos.pop(0)  # Remove do início (FIFO)
    print(f"Paciente atendido: Nome: {paciente_atendido['nome']}, CPF: {paciente_atendido['cpf']}")

def mostrar_fila():
    """Mostra os pacientes ainda na fila."""
    print("\n--- PACIENTES NA FILA ---")
    if not fila_atendimentos:
        print("A fila está vazia.")
        return
    
    print(f"{'Posição':<8} | {'Nome':<25} | {'CPF':<15}")
    print("-" * 50)
    for idx, paciente in enumerate(fila_atendimentos, start=1):
        print(f"{idx:<8} | {paciente['nome']:<25} | {paciente['cpf']:<15}")

def executar_algoritmo_completo():
    """Executa o algoritmo completo: inserir 3 pacientes, atender 1, mostrar restante."""
    print("\n--- EXECUTANDO ALGORITMO COMPLETO ---")
    # Limpar fila para começar do zero
    fila_atendimentos.clear()
    
    # Passo 1: Inserir 3 pacientes
    print("Inserindo 3 pacientes na fila...")
    for i in range(1, 4):
        print(f"\nPaciente {i}:")
        nome = input("Nome: ").strip().title()
        if not nome:
            print("Erro: Nome não pode estar vazio. Pulando...")
            continue
        while True:
            cpf = input("CPF (11 dígitos): ").strip()
            if len(cpf) == 11 and cpf.isdigit():
                break
            else:
                print("Erro: CPF inválido.")
        fila_atendimentos.append({'nome': nome, 'cpf': cpf})
        print(f"Paciente {i} inserido.")
    
    # Passo 2: Atender o primeiro
    print("\nAtendendo o primeiro paciente...")
    if fila_atendimentos:
        paciente_atendido = fila_atendimentos.pop(0)
        print(f"Atendido: {paciente_atendido['nome']} (CPF: {paciente_atendido['cpf']})")
    else:
        print("Fila vazia após inserção.")
    
    # Passo 3: Mostrar restante
    print("\nPacientes ainda na fila:")
    if fila_atendimentos:
        for paciente in fila_atendimentos:
            print(f"- {paciente['nome']} (CPF: {paciente['cpf']})")
    else:
        print("Nenhum paciente restante.")

def main():
    """Função principal que controla o loop do programa."""
    while True:
        mostrar_menu()
        try:
            opcao = int(input("Escolha uma opção: "))
        except ValueError:
            print("Erro: Digite um número válido.")
            continue
        
        if opcao == 1:
            inserir_paciente()
        elif opcao == 2:
            atender_primeiro()
        elif opcao == 3:
            mostrar_fila()
        elif opcao == 4:
            executar_algoritmo_completo()
        elif opcao == 5:
            print("Saindo do sistema. Até logo!")
            break
        else:
            print("Opção inválida. Escolha entre 1 e 5.")
        
        input("\nPressione ENTER para continuar...")

# Executa o programa
if __name__ == "__main__":
    main()
